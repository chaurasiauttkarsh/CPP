Given two sorted arrays of Size M and N respectively, merge them into a third array such that the third array is also sorted.
Input Format :
 Line 1 : Size of first array i.e. M
 Line 2 : M elements of first array separated by space
 Line 3 : Size of second array i.e. N
 Line 2 : N elements of second array separated by space
Output Format :
M + N integers i.e. elements of third sorted array separated by spaces.
Constraints :
1 <= M, N <= 10^6
Sample Input :
5
1 3 4 7 11
4
2 4 6 13
Sample Output :
1 2 3 4 4 6 7 11 13 

Solution :

void rest(int arr_main[],int i, int arr_left[], int m, int size)
{
    while(m < size)
    {
        arr_main[i] = arr_left[m];
        i++;
        m++;
    }
}

void merge(int arr1[], int size1, int arr2[], int size2, int ans[])
{
    int m1 = 0, m2 =0;
    
    for(int i = 0; i < size1 + size2; i++)
    {
        if(arr1[m1] <= arr2[m2])
        {
            ans[i] = arr1[m1];
            if(m1 == (size1 - 1))
            {
                rest(ans, i+1, arr2, m2, size2);
                break;
            }
            m1++;
        }
        else
        {
            ans[i] = arr2[m2];
            if(m2 == (size2 - 1))
            {
                rest(ans, i+1, arr1, m1, size1);
                break;
            }
            m2++;
        }
    }
}
